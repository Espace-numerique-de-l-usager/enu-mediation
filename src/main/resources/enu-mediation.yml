app:
  formservices:
    url: ${FORMSERVICES_BASEURL}/rest
  logging:
    max-file-content-size: '100'
  document:
    mime-types: application/pdf
  rabbitmq:
    dlx: usager-dead-letter-x # Exchange où on écrit les messages en erreur destinés aux SI métier
    queue-in: usager-q # queue où on lit les messages des SI métier
    exchange-out: usager-x # Exchange d'envoi des messages aux SI métier
    dlq: usager-dead-letter-q # Queue pour les messages en erreur propres à ENU
    host: ${RABBITMQ_HOST}
    port: '5672'
    virtual-host: aelenu
    timeout-cnx: 60000
    timeout-read: 60000
    ssl:
      verify-hostname: false
      enabled: true
    listener:
      direct:
        acknowledge-mode: auto

spring:
  main:
    banner-mode: LOG
  security:
    oauth2:
      client:
        provider:
          sso:
            issuer-uri: ${RABBITMQ_UAA}
        registration:
          sso:
            client-id: ${UAA_CLIENT_ID}
            client-secret: ${UAA_CLIENT_SECRET}
            username: ${UAA_USERNAME}
            password: ${UAA_PASSWORD}
            authorization-grant-type: password

#logging:
#  level:
#    root: INFO
#    org.apache.camel: INFO
#    org.springframework: INFO
#    ch.ge.ael.enu.mediation: DEBUG
#    sun.net: TRACE
#    sun.net.www: TRACE
#    sun.net.www.http.HttpClient: TRACE
#    sun.net.www.protocol.http.HttpURLConnection: TRACE
#    java.net: TRACE
#    java.net.HttpURLConnection: TRACE
#    sun.security.ssl.SSLSocketImpl: TRACE
#    com.rabbitmq.client: TRACE

logging:
  level:
    root: TRACE
    org.apache: INFO
    io.netty: INFO
    JMX: INFO
    org.springdoc: INFO
    reactor.netty: INFO
    reactor.util: INFO
    org.hibernate: INFO
    org.apache.camel: INFO
    org.springframework: INFO
    ch.ge.ael.enu.mediation: DEBUG
    sun.net.www: TRACE
    sun.net.www.http.HttpClient: TRACE
    sun.net.www.protocol.http.HttpURLConnection: TRACE
    java.net.HttpURLConnection: TRACE
    sun.security.ssl.SSLSocketImpl: TRACE
    com.rabbitmq.client: TRACE
